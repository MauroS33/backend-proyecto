<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}}</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <h1>Mi carrito de compras</h1>

  {{!-- {{#if errorMessage}}
    <p>{{errorMessage}}</p>
  {{else if cart}} --}}
    <div id="cart">
      {{#each products}}
        <div>
          <h3>{{this.product.title}}</h3>
          <p>Precio unitario: ${{this.product.price}}</p>
          <p>Cantidad: {{this.quantity}}</p>
          <p>Subtotal: ${{multiply this.product.price this.quantity}}</p>
          <button onclick="removeFromCart('{{this.product._id}}')">Eliminar</button>

        </div>
      {{/each}}

      <h2>Total: ${{cart.total}}</h2>

      <button onclick="checkout()">Finalizar Compra</button>
      <button onclick="clearCart()">Vaciar Carrito</button>
    </div>
  {{else}}
    <p>El carrito está vacío.</p>
  {{/if}}

  <script>
    function checkout() {
      alert("Gracias por tu compra! Proceso de pago simulado.");
      window.location.href = "/"; // Redirigir al inicio después de "comprar"
    }

  function removeFromCart(productId) {
    const cartId = localStorage.getItem("cartId") || "ID_CARRITO_DUMMY";
    fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: "DELETE"
    }).then(res => {
      if (res.ok) location.reload();
    });
  }

async function clearCart() {
  const cartId = "{{cart._id}}"; // Obtener el ID del carrito desde la vista
  try {
    const response = await fetch(`/api/carts/${cartId}`, {
      method: 'DELETE'
    });

    if (!response.ok) throw new Error("Error al vaciar el carrito");

    const result = await response.json();
    alert(result.message);
    window.location.reload(); // Recargar la página para reflejar los cambios
  } catch (error) {
    console.error(error.message);
    alert("Ocurrió un error al vaciar el carrito");
  }
}
  </script>
</body>
</html>